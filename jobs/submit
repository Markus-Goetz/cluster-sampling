#!/usr/bin/env bash

#MSUB -N Pavia_cluster_sampling
#MSUB -l nodes=1:ppn=4:visu
#MSUB -l walltime=03:00:00
#MSUB -m bae
#MSUB -M markus.goetz@kit.edu

SCRIPT="$PROJECT/cluster-sampling/cnn/spectral_cnn.py"
DATASET="pavia"
DATA="$PROJECT/cluster-sampling/data/$DATASET.h5"
FRACTION=0.1
MODE="random"
SEED=0
EPS=1.5
MIN_POINTS=9

if [ $MODE = "random" ];
then
    BASE="$DATASET_$FRACTION_$SEED.h5"
else
    BASE="$DATASET_$FRACTION_$EPS_$MIN_POINTS.h5"
fi
MASK="$PROJECT/cluster-sampling/data/$BASE"

GPUS=4
UDOCKER="$PROJECT/.udocker"
UDOCKER_CONTAINER="tensorflow_1.8.0-gpu-py3"
UDOCKER_DIRECTORY="/home"

udocker setup --exectmode=F3 --nvidia ${UDOCKER_CONTAINER}
for (( i=0; i < $GPUS; i++ ));
do
    udocker run --volume=${PROJECT}:${UDOCKER_DIRECTORY} \
                --env="CUDA_VISIBLE_DEVICE=$i" \
                --workdir=${UDOCKER_DIRECTORY} ${UDOCKER_CONTAINER} \
                ${SCRIPT} -g -t -s ${i} -w 7 -b 100 -e 5000  \
                --model "$BASE-model-$i" \
                --train_history "$BASE-train-$i" \
                --test_history "$BASE-test-$i" \
                --results "$BASE-results-$i" \
                ${DATA} ${MASK} &
    processes[${i}]=$!
done

for pid in ${processes[*]};
do
    wait ${pid}
done
